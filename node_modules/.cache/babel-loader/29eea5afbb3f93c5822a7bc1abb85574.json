{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vedan\\\\Desktop\\\\PROJECT\\\\store\\\\src\\\\Components\\\\sign-in\\\\signin.jsx\";\nimport React from \"react\";\nimport './signin.scss';\nimport FormInput from \"../form-input/form\";\nimport CustomButton from \"../Button/button\";\nimport { auth, signInWithGoogle } from '../../firebase/firebase-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          onChange: this.handleChange,\n          value: this.state.email,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \" Sign in \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: signInWithGoogle,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/vedan/Desktop/PROJECT/store/src/Components/sign-in/signin.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","value","name","target","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,IAAT,EAAgBC,gBAAhB,QAAwC,+BAAxC;;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASJ,MAAMC,KAAN,IAAe;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAACC,QAAAA,KAAD;AAASC,QAAAA;AAAT,UAAqB,KAAKC,KAAhC;;AACA,UAAG;AACD,cAAMX,IAAI,CAACY,0BAAL,CAAgCH,KAAhC,EAAsCC,QAAtC,CAAN;AACA,aAAKG,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAC,EAAP;AAAUC,UAAAA,QAAQ,EAAC;AAAnB,SAAd;AAED,OAJD,CAIE,OAAMI,KAAN,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,WAAKD,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAd;AACD,KAtBkB;;AAAA,SAwBnBO,YAxBmB,GAwBJV,KAAK,IAAI;AACtB,YAAM;AAAEW,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBZ,KAAK,CAACa,MAA9B;AAEA,WAAKP,QAAL,CAAc;AAAE,SAACM,IAAD,GAAQD;AAAV,OAAd;AACD,KA5BkB;;AAGjB,SAAKP,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAuBDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAM,QAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAE,KAAKW,YAHjB;AAIE,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWF,KAJpB;AAKE,UAAA,KAAK,EAAC,OALR;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,SAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAE,KAAKE,KAAL,CAAWD,QAHpB;AAIE,UAAA,QAAQ,EAAE,KAAKO,YAJjB;AAKE,UAAA,KAAK,EAAC,UALR;AAME,UAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEhB,gBAAvB;AAAyC,YAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AA/DgC;;AAkEnC,eAAeC,MAAf","sourcesContent":["import React from \"react\";\r\nimport './signin.scss';\r\nimport FormInput from \"../form-input/form\";\r\nimport CustomButton from \"../Button/button\";\r\nimport { auth , signInWithGoogle } from '../../firebase/firebase-utils';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        email: '',\r\n        password: ''\r\n      };\r\n    }\r\n  \r\n    handleSubmit = async event => {\r\n      event.preventDefault();\r\n      \r\n      const {email , password} = this.state;\r\n      try{\r\n        await auth.signInWithEmailAndPassword(email,password);\r\n        this.setState({email:'',password:''});\r\n\r\n      } catch(error){\r\n        console.log(error);\r\n      }\r\n\r\n      this.setState({ email: '', password: '' });\r\n    };\r\n  \r\n    handleChange = event => {\r\n      const { value, name } = event.target;\r\n  \r\n      this.setState({ [name]: value });\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n        <div className='sign-in'>\r\n          <h2>I already have an account</h2>\r\n          <span>Sign in with your email and password</span>\r\n  \r\n          <form onSubmit={this.handleSubmit}>\r\n            <FormInput\r\n              name='email'\r\n              type='email'\r\n              onChange={this.handleChange}\r\n              value={this.state.email}\r\n              label='email'\r\n              required\r\n            />\r\n            <FormInput\r\n              name='password'\r\n              type='password'\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              label='password'\r\n              required\r\n            />\r\n            <div className='buttons'>\r\n              <CustomButton type='submit'> Sign in </CustomButton>\r\n              <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\r\n                Sign in with Google\r\n              </CustomButton>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default SignIn;"]},"metadata":{},"sourceType":"module"}